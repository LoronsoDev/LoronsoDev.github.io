[{"content":"\u0026ldquo;Everything should be made as simple as possible, but not simpler\u0026rdquo;\n","date":"1 January 1970","permalink":"/","section":"","summary":"\u0026ldquo;Everything should be made as simple as possible, but not simpler\u0026rdquo;","title":""},{"content":"","date":"1 January 1970","permalink":"/languages/c#/","section":"Languages","summary":"","title":"C#"},{"content":"","date":"1 January 1970","permalink":"/engines/","section":"Engines","summary":"","title":"Engines"},{"content":" This game is playable on itch.io\rTry this game!\rWhat is G!RO? # As last year students, some of my classmates and I decided to create small, addictive mobile games so we could iterate easily and test different concepts. We tried several prototypes with the idea of having only the \u0026ldquo;tapping\u0026rdquo; input available. G!RO is the result of one of those prototypes.\nIn G!RO you are in control of a spaceship that has lost one of its motors and spins endlessly while trapped in an unknown planet. Your role is to survive for as long as possible using your main weapon for movement and defense.\nMy role in G!RO # As we started testing different concepts, we needed tools to iterate fast. I was in charge of researching the most commonly used features of hypercasual games, designing and developing an in-engine tool that provided most of the implementations hypercasual-arcade games for mobile usually need, while being fully customizable. The tool is fully interchangeable between different games, supports 2D and 3D and only requires minimum configuration to work. This means: Menu functionality (responsive, provided default menus and means to customize them). Store Player selection Inventories Ads and IAPs (In-App purchases) Several minor implementations (volume buttons, basic graphical quality settings) Hard \u0026amp; soft currency Hooks menu\u0026lt;-\u0026gt;game so all the developer had to do was listen to specific events (e.g. starting the game) Saving/Loading locally (playerprefs, encrypted/unencrypted JSON) Improving gameplay feedback: Dynamically displaying current user weapon charge, limiting UI and implementing it into the game design. Screen shake Creating a procedural world different for each playthrough Implementing different biomes made by the artists Implementing different spaceship types/weapons Optimizing game world so the game could be played in low-end games Bug fixing Honorable mentions # Awarded \u0026ldquo;Most enjoyable game\u0026rdquo; @ Indie Burger Awards, hosted at BIG, formerly Fun\u0026amp;Serious Bilbao Nomination for \u0026ldquo;Best old school arcade game\u0026rdquo; @ Indie Burger Awards, hosted at BIG, formerly Fun\u0026amp;Serious Bilbao ","date":"1 January 1970","permalink":"/projects/gro/","section":"Projects","summary":"This game is playable on itch.","title":"G!RO"},{"content":"","date":"1 January 1970","permalink":"/languages/","section":"Languages","summary":"","title":"Languages"},{"content":"","date":"1 January 1970","permalink":"/tags/personal-project/","section":"Tags","summary":"","title":"Personal project"},{"content":"\n","date":"1 January 1970","permalink":"/projects/","section":"Projects","summary":"","title":"Projects"},{"content":"","date":"1 January 1970","permalink":"/tags/","section":"Tags","summary":"","title":"Tags"},{"content":"","date":"1 January 1970","permalink":"/engines/unity/","section":"Engines","summary":"","title":"Unity"},{"content":" This game is made for Pico 4 VR headsets using the OpenXR standard\rWhat is Alien Agent? # Alien Agent is a short game set in an alternate universe future, where you\u0026rsquo;re in the boots of a soldier, in a future where the army is made up of ordinary people controlling robots fighting in distant conflicts.\nMy role in Alien Agent # The whole experience has been designed \u0026amp; developed by me, using bought art assets from Sinty Studios. However, some highlights are:\nCreated a flow for iterating faster with Pico 4 headsets, as they were quite new at the moment and development tools were rough.\nDesigned the levels, minigames and the whole experience.\nImplemented diegetic menus and interfaces.\nImplemented virtual hands that reproduce the player\u0026rsquo;s hand movements by retrieving the Pico button states and animating the ingame hands accordingly.\nAdded physics support so players can interact with their environment without the need of explicitly grabbing the items.\nSupported wearables, like hats or bracelets.\nCreated custom shaders to better differentiate certain parts of the experience.\nImplemented double handed weapons and their behaviour.\nModified render pipeline so certain things could be supported, this was specially useful for 3D tutorials like arrows indicating the next steps. This modifications allowed for the custom shaders to be rendered through any object, so the user could see their next step at any moment just by looking around.\nAnimated certain parts of the experience to achieve better feedback for the end user and increase immersion.\n","date":"1 January 1970","permalink":"/projects/vr-inside-vr-adventure/","section":"Projects","summary":"This game is made for Pico 4 VR headsets using the OpenXR standard\rWhat is Alien Agent?","title":"Alien Agent"},{"content":"","date":"1 January 1970","permalink":"/tags/vr/","section":"Tags","summary":"","title":"VR"},{"content":" This game is playable on Google Play and App Store\rTry this game! Android\r- iOS\rWhat is Nadurines? # Nadurines is a minigame-based game for children. I was part of the development of one of its DLC.\nMy role in Nadurines # Developed \u0026ldquo;lights\u0026rdquo; minigame, a time management minigame where you have to avoid leaving lights on when there isn\u0026rsquo;t anyone inside.\nDeveloped \u0026ldquo;runer\u0026rdquo; minigame, where the player needs to avoid obstacles for as long as possible.\nDeveloped unique superpowers for each of the characters. Dynamic obstacle generation Dynamic difficulty (changing per time) Changed base game architecture to support the addition of several new characters, part of the DLC.\nMofified all base game minigames so they could support new player selected characters.\nImplemented soft coins that players can use to buy ingame items.\nModified bath minigame so it could fit new items.\nModified clothing minigame so all player-selectable characters can wear any kind of clothing.\nModified \u0026ldquo;plant growing\u0026rdquo; minigame so the player could use more seeds, with new kinds of trees and fruits dropping from them.\nImplemented design team\u0026rsquo;s requests throughout the game.\nCreated in-engine tool so the design team could easily implement new stories in the style of visual novel games, which was a completely new part of the game.\nHonorable mentions # Nadurines currently has a positive rating in both Android and Apple Stores +500.000 downloads ","date":"1 January 1970","permalink":"/projects/nadurines/","section":"Projects","summary":"This game is playable on Google Play and App Store\rTry this game!","title":"Nadurines"},{"content":"","date":"1 January 1970","permalink":"/tags/professional-project/","section":"Tags","summary":"","title":"Professional project"},{"content":"","date":"1 January 1970","permalink":"/languages/assimp/","section":"Languages","summary":"","title":"Assimp"},{"content":"","date":"1 January 1970","permalink":"/languages/c++/","section":"Languages","summary":"","title":"C++"},{"content":"","date":"1 January 1970","permalink":"/engines/game-engine-architecture/","section":"Engines","summary":"","title":"Game Engine Architecture"},{"content":"\rWhat is this engine? # Since I started making games, I\u0026rsquo;ve been deeply intrigued in the inner workings of more commercial engines. This was my first iteration of a game engine.\nIt supports 2D and 3D graphics using SDL2 for 2D and CPU rendering for 3D. The engine supports physics via a implementation of Box2D (2D) and Bullet Physics (3D).\nThe engine is built around an ECS (Entity-Component-System) architecture.\nLoronsoDev/GameEngine2\rSecond version of my yet-unnamed game engine. Can support 3D and 2D. Implements Bullet Physics for 3D and Box2D for 2D development. This engine is highly commented and valuable as a learning tool. It is not being worked on.\rC\u0026#43;\u0026#43; 0\r0\rWhy do I consider this project important? # This project set my stepping stone to larger projects involving graphics and general game engine programming. It sparked enough curiosity in me to continue studying code architecture, computer graphics and proper GPU APIs like OpenGL or Vulkan.\nWhy did I stop working on it? # At a point in its development, the engine needed reflection so I could translate the custom scene files into scenes that could be generated at runtime. I considered that instead of trying to implement it, I could just stop the work there, document everything clearly and use it for future reference in other engines if needed. I started working in this engine as a newbie with C++, so I feared that if I started implementing my own custom C++ reflection or any other reflection API, the engine could become so convoluted that I would no longer be able to maintain it properly. I preferred to have a working build that could be used by me or others for learning and start a new project from scratch using what I learnt while building this engine.\n","date":"1 January 1970","permalink":"/projects/engine-sdl/","section":"Projects","summary":"What is this engine?","title":"My first (unnamed) Game Engine"},{"content":"","date":"1 January 1970","permalink":"/languages/sdl2/","section":"Languages","summary":"","title":"SDL2"},{"content":" This game is playable on itch.io\rTry this game!\rWhat is GALAXY FORCES? # Galaxy Forces was a video game created for a degree assignment. It got out ouf hand for me, as I was really liking the smoothness of the gameplay, so I spent much, much longer than needed polishing it up and creating a fun product to play.\nThe game is designed to be played with joysticks, but it also supports virtual mobile joysticks and keyboard. Due to the nature of the gameplay, using keyboard is the least preferred option.\nThe goal of the game is to finish in the least amount of time possible, killing the most enemies possible throughout the play. The score system is designed to reflect it, giving more score if you go faster.\nAn obvious inspiration for this game is Starfox (Nintendo).\nMy role in GALAXY FORCES # I made all the code related parts of this project alone (gameplay, UI, tools\u0026hellip;), using Unity. All art excluding the spaceship is bought from the Unity Asset Store. The spaceship was modelled by a colleague.\nWhat am I proud of developing here? # I especially liked how the feeling turned out. I experimented a lot with feedback and FX. To give the player a good sense of speed, I spawned particles all around the camera, speeding them up when the user went faster and increased the FOV dramatically. I also experimented with postprocess in this regard, adding things like blur and chromatic aberration when going faster.\nAdding the crosshair was also a really tricky part, as representing 3D spaces in a 2D space (screen space) while also giving the user the sense of control is very tricky. I ended up drawing a virtual line from the tip of the spaceship to the usual attack length, taking that position and translating it to the screen space, drawing the crosshair there. It felt really good.\nA good challengue here was performance too, as spawning a big number of enemies, with their own logic and with the ability to spawn bullets was giving a good toll on performance. I ended up going around this by hiding all enemies that were occluded by any of the geometry or that were behind the player (dot(player, enemy) \u0026lt; 0). I also pooled all spawnable objects and enemies, so I didn\u0026rsquo;t need to allocate memory every time I needed to instantiate one of them, and also avoiding the performance hit of destroying gameobjects by only disabling and reusing them.\n","date":"1 January 1970","permalink":"/projects/galaxy-forces/","section":"Projects","summary":"This game is playable on itch.","title":"Galaxy Forces"},{"content":"","date":"1 January 1970","permalink":"/tags/ar/","section":"Tags","summary":"","title":"AR"},{"content":" This project is property of Isostopy, SL. More information can be seen on https://isostopy.com/project/pre-trip-inspection/\rWhat is PRE TRIP INSPECTION? # Pre Trip Inspection is an immersive training system for professional drivers adapted to US regulations. The solution was created “ad hoc” for the North American company Advanced Training Systems LLC (ATS), a leading company in the virtual training sector for carriers.\nThis app offers a revolutionary quick, precise and easy training system, which streamlines the training of drivers both in risk prevention and in obtaining specific certifications and licenses, allowing users to choose between training in virtual reality mode or in augmented reality according to your needs.\nMy role in PRE TRIP INSPECTION # I was part of the team as an intern.\nImplemented Vuforia\u0026rsquo;s SDK for AR viewing using AR cards.\nImplemented different modes, like \u0026ldquo;evaluation\u0026rdquo; mode, that did an exam to the user, or \u0026ldquo;practice\u0026rdquo; mode, that asked the users the same question as evaluation mode, but was infinite.\nDeveloped shaders for outlining different parts of the truck body.\nImplemented different viewing modes (buttons and swiping)\nCreated in-engine tool to add/remove questions easily.\nImplemented different camera movements so the camera didn\u0026rsquo;t clip through the truck if not necessary.\n","date":"1 January 1970","permalink":"/projects/pre-trip-inspection-us-cdl/","section":"Projects","summary":"This project is property of Isostopy, SL.","title":"Pre trip Inspection (US CDL)"},{"content":" This game is playable on itch.io\rTry this game!\rWhat is FADE? # FADE was a video game created in 4 days as part of Telefonica\u0026rsquo;s hackathon \u0026ldquo;HackForGood\u0026rdquo;. The goal of the event was to create pieces of software that could be used for the greater good, in any way.\nWe chose to create a short story based on an elderly woman suffering from Alzheimer. Our objective was to raise awareness around this issue, getting our players to play as her.\nIt\u0026rsquo;s important to note that video games for this event were strictly in the category of \u0026ldquo;serious games\u0026rdquo;, which led to us making some modifications in the way the game was handled and played.\nMy role in FADE # In this project, I got to work on: ​\nMovement\nInteractions\nAnimation integration\nPuzzle minigames\nParallax \u0026amp; depth effects\nArt integration\nHonorable mentions # 2nd prize in Telefónica/Movistar hosted hackathon \u0026ldquo;HackForGood\u0026rdquo; ","date":"1 January 1970","permalink":"/projects/fade/","section":"Projects","summary":"This game is playable on itch.","title":"FADE"},{"content":"","date":"1 January 1970","permalink":"/tags/game-jam/","section":"Tags","summary":"","title":"Game Jam"},{"content":"","date":"1 January 0001","permalink":"/authors/","section":"Authors","summary":"","title":"Authors"},{"content":"","date":"1 January 0001","permalink":"/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/series/","section":"Series","summary":"","title":"Series"}]